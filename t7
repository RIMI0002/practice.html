<html>

<head>
    <title>
        SAMPLE HTML TABLE
    </title>
</head>

<body>

    <p>UNORDERED LIST LIST STYLE CIRCLE</p>
    <ul style="list-style: circle;">
        <li>Apple</li>
        <li>Oranges</li>
        <li>Grapes</li>
        <li>Banana</li>
    </ul>

    <hr>

      <p>UNORDERED LIST LIST STYLE DISC</p>
    <ul style="list-style: disc;">
        <li>Apple</li>
        <li>Oranges</li>
        <li>Grapes</li>
        <li>Banana</li>
    </ul>
      <hr>

        <p>UNORDERED LIST LIST STYLE SQUARE</p>
    <ul style="list-style:square;">
        <li>Apple</li>
        <li>Oranges</li>
        <li>Grapes</li>
        <li>Banana</li>
    </ul>
      <hr>

           <p>ORDERED LIST LIST</p>
    <ol type="1" start="-1" >
        <li>Apple</li>
        <li>Oranges</li>
        <li>Grapes</li>
        <li>Banana</li>
    </ol>


    <dl>
        <dt>HTML</dt>
        <dd>HYPER TEXT MAEKUP LANGUAGE</dd>
    </dl>
    <dl>
        <dt>HTTP</dt>
        <dd>HYPER TEXT TRANSFER PROTOCOL</dd>
    </dl>


    <a target="_blank"  href="tel:+91-8749877145"> I AM THE ANCHOR TAG ! </a>



<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</body>
</html>
